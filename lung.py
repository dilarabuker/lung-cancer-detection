# -*- coding: utf-8 -*-
"""lung.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1423mTV1p4Jk-jVa_D4eI_he5lovHOxw1
"""

import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
#kütüphanelerin eklenmesi

!pwd

cd /content/sample_data

!pwd

data=pd.read_csv('/content/drive/MyDrive/yapayzeka/lung_cancer_ak.csv') #csv formatındaki veri setinin eklenmesi

data.head()

data.drop(['Name','Member_ID',"Smokes_years","Smokes_packs_year"],axis=1,inplace=True) #veri setindeki bazı satırların silinmesi

ödata.head()

M=data[data.Diagnosis=='M']
B=data[data.Diagnosis=='B'] #iyi huylu ve kötü huylu tümörlere değişken atandı

data.Diagnosis = [1 if i == 'M' else 0 for i in data.Diagnosis] #kötü huyluysa 1, iyi huyluysa 0 yazdırıldı

data.Diagnosis = [0 if i == '?' else i for i in data.Diagnosis]
data.Age = [0 if i == '?' else i for i in data.Age]
data.Smokes = [0 if i == '?' else i for i in data.Smokes]
#data.Smokes_years = [0 if i == '?' else i for i in data.Smokes_years]
#data.Smokes_packs_year = [0 if i == '?' else i for i in data.Smokes_packs_year]
data.AreaQ = [0 if i == '?' else i for i in data.AreaQ]
data.Alkhol = [0 if i == '?' else i for i in data.Alkhol]
data.familyhistory = [0 if i == '?' else i for i in data.familyhistory]
data.Result = [0 if i == '?' else i for i in data.Result]
 
# daha sonra hata almamak için önlem olarak veri setinde ? olan alanlar yerine 0 yazıldı

y = data.Diagnosis.values #teşhis bölümüne değişken atandı

x_data=data.drop(["Diagnosis"],axis=1) #teşhis sütunu olmadan veri setine değişken atandı

x = (x_data-np.min(x_data))/(np.max(x_data)-np.min(x_data)) #normalizasyon işlemi uygulandı. 
# veritabanlarında çok fazla sütun ve satırdan oluşan bir tabloyu 
#tekrarlardan arındırmak için daha az satır ve sütun içeren alt kümelerine ayrıştırma işlemidir.

x

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.24,random_state=1)

from sklearn import naive_bayes #kütüphane ekleme

from sklearn.naive_bayes import GaussianNB

nb = GaussianNB() #gaussian naive bayes ile çalıştık

nb.fit(x_test,y_test)

print("prediction score:",nb.score(x_test,y_test)) #ekrana tahmin puanını getirdik